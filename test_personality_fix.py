#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–¥—Ç–æ –∞–±—Å—É—Ä–¥–Ω–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–∂–∫–∏ –±–æ—Ç–∞
"""

import asyncio
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

from bot.modules import gemini
from bot.modules import random_life  
from bot.modules import enhanced_behavior

class MockMessage:
    """–§–µ–π–∫–æ–≤–∏–π –æ–±'—î–∫—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    def __init__(self, text: str, user_name: str = "TestUser", chat_id: int = -1001234567890):
        self.text = text
        self.from_user = type('User', (), {'full_name': user_name})
        self.chat = type('Chat', (), {'id': chat_id})

async def test_new_personality():
    """–¢–µ—Å—Ç—É—î –Ω–æ–≤—É, –º–µ–Ω—à –∞–±—Å—É—Ä–¥–Ω—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∫—É"""
    
    print("üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–∂–∫–∏ –ì—Ä—è–≥–∞...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ó–≤–∏—á–∞–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    message = MockMessage("–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —Å–ø—Ä–∞–≤–∏?")
    try:
        response = await gemini.process_message(message)
        print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –Ω–∞–¥—Ç–æ –∞–±—Å—É—Ä–¥–Ω–∏—Ö —Ñ—Ä–∞–∑
        absurd_indicators = ["–∞–±—Å—É—Ä–¥–Ω", "–¥–∏–≤–Ω", "–Ω–µ–∑–≤–∏—á–∞–π–Ω", "—á—É–¥–µ—Ä–Ω–∞—Ü—å–∫", "–±–æ–∂–µ–≤—ñ–ª—å–Ω"]
        if any(word in response.lower() for word in absurd_indicators):
            print("‚ö†Ô∏è  –£–≤–∞–≥–∞: –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—Åe —â–µ –º—ñ—Å—Ç–∏—Ç—å –∞–±—Å—É—Ä–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏")
        else:
            print("‚úÖ –î–æ–±—Ä–µ: –í—ñ–¥–ø–æ–≤—ñ–¥—å –±—ñ–ª—å—à –∞–¥–µ–∫–≤–∞—Ç–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –†–∞–Ω–¥–æ–º–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:")
    try:
        random_response = await random_life.get_random_reply(["–ü—Ä–∏–≤—ñ—Ç –≤—Å—ñ–º!", "–Ø–∫ —Å–ø—Ä–∞–≤–∏?"])
        print(f"–†–∞–Ω–¥–æ–º–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {random_response}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–æ–Ω
        if any(word in random_response.lower() for word in ["–¥—Ä—É–∂–µ–ª—é–±–Ω", "–¥–æ–ø–æ–º–æ–≥", "—Ü—ñ–∫–∞–≤", "–ø—Ä–∏—î–º–Ω"]):
            print("‚úÖ –î–æ–±—Ä–µ: –†–∞–Ω–¥–æ–º–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω–∞")
        else:
            print("‚ö†Ô∏è  –†–∞–Ω–¥–æ–º–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–æ–∂–µ –±—É—Ç–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –°–ø–æ–Ω—Ç–∞–Ω–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    try:
        spontaneous_prompt = enhanced_behavior.get_spontaneous_prompt(-1001234567890)
        print(f"–ü—Ä–æ–º—Ç –¥–ª—è —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {spontaneous_prompt}")
        
        if "–∞–±—Å—É—Ä–¥–Ω" not in spontaneous_prompt.lower():
            print("‚úÖ –î–æ–±—Ä–µ: –°–ø–æ–Ω—Ç–∞–Ω–Ω–∏–π –ø—Ä–æ–º—Ç –±–µ–∑ –∞–±—Å—É—Ä–¥—É")
        else:
            print("‚ö†Ô∏è  –°–ø–æ–Ω—Ç–∞–Ω–Ω–∏–π –ø—Ä–æ–º—Ç –≤—Åe —â–µ –º—ñ—Å—Ç–∏—Ç—å –∞–±—Å—É—Ä–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìù –û—Å–Ω–æ–≤–Ω—ñ –∑–º—ñ–Ω–∏:")
    print("   ‚Ä¢ –ü—Ä–∏–±—Ä–∞–Ω–æ –≤—Å—ñ '–∞–±—Å—É—Ä–¥–Ω—ñ' —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó")
    print("   ‚Ä¢ –ó–º–µ–Ω—à–µ–Ω–æ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ —Ä–∞–Ω–¥–æ–º–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π")
    print("   ‚Ä¢ –ë–æ—Ç —Ç–µ–ø–µ—Ä –±—ñ–ª—å—à –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π —Ç–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–∏–π") 
    print("   ‚Ä¢ –ó–±–µ—Ä—ñ–≥—Å—è –ª–µ–≥–∫–∏–π –≥—É–º–æ—Ä –±–µ–∑ –±–æ–∂–µ–≤—ñ–ª–ª—è")

if __name__ == "__main__":
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    if not os.getenv("GEMINI_API_KEY"):
        print("‚ö†Ô∏è  GEMINI_API_KEY –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –¥–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –º–æ–∂—É—Ç—å –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏")
    
    asyncio.run(test_new_personality())
