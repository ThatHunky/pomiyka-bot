[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gryag-bot"
version = "3.0.0"
description = "Україномовний Telegram-бот з Gemini AI та локальним аналізатором"
authors = [
    {name = "Гряг Бот Команда"}
]
dependencies = [
    "aiogram>=3.4.1",
    "aiohttp>=3.9.1", 
    "python-dotenv>=1.0.0",
    "google-generativeai>=0.3.2",
    "psutil>=5.9.0",
    "pytest>=7.0.0",
    "sentence-transformers>=2.2.2",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "spacy>=3.7.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "bandit>=1.7.5",
    "safety>=2.3.0"
]

[tool.black]
line-length = 120
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiogram.*",
    "google.generativeai.*",
    "sentence_transformers.*",
    "spacy.*",
    "numpy.*",
    "sklearn.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = [".", "tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=bot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["bot"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used и shell_injection для тестів
