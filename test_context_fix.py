#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤—Å—Ç–∞–≤–ª—è–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

from bot.modules import enhanced_behavior, gemini
import asyncio

# –¢–µ—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
test_messages = [
    "–¢—ñ—à–∞... –í–æ–Ω–∞ –≥—É—á–Ω–∞. —è–∫—â–æ –ø—Ä–∏—Å–ª—É—Ö–∞—Ç–∏—Å—å, –≤ –Ω—ñ–π –º–æ–∂—É—Ç—å –∂–∏—Ç–∏ –Ω–µ–≤–∏–¥–∏–º—ñ –∑–≤—É–∫–∏...",
    "–æ—Å—å –ª—é–¥—Å—å–∫—ñ –∫—Ä–æ–∫–∏ —â–æ –æ–∫—Å–∞–º—ñ—Ç–æ–≤—É –≥–ª—É—Ö–æ—Ç—É –ø—Ä–æ–±–∏–≤–∞—é—Ç—å –∫—Ä–∏–∫–æ–º –∑–≤—É–∫—ñ–≤... –ß–µ —Ç–æ —Ç–∞–∫ —ñ—Ö—Ä–∞–Ω–∞ –∫–æ–¥-—Ü—è-–∫–∞?",
    "import_history ** - –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –º—ñ–Ω—ñ–º—É–º—É —É –¥–∂–µ—Ä–µ–ª–∞ –ø—ñ–¥ –≤–ª–∞–¥–Ω—É –ø–∏—Ç–∞–Ω–Ω—è"
]

def test_context_not_mixed():
    """–¢–µ—Å—Ç—É—î —â–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –∑–º—ñ—à—É—î—Ç—å—Å—è –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º"""
    
    # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    analysis = enhanced_behavior.analyze_conversation_context(
        test_messages[0], 
        test_messages[1:]
    )
    
    print("üîç –ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    print(f"–¢–∏–ø: {analysis['type']}")
    print(f"–ù–∞—Å—Ç—Ä—ñ–π: {analysis['mood']}")
    print(f"–ó–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: {analysis['engagement']}/10")
    print(f"–¢–æ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {analysis['response_tone']}")
    print("")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é —Ç–æ–Ω—É (–Ω–æ–≤–∞ –ª–æ–≥—ñ–∫–∞)
    tone_instruction = enhanced_behavior.get_tone_instruction(analysis)
    print("üìù –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è —Ç–æ–Ω—É:")
    print(f"'{tone_instruction}'")
    print("")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ù–ï –º—ñ—Å—Ç–∏—Ç—å –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    original_text = test_messages[0]
    if original_text in tone_instruction:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–æ–Ω—É!")
        return False
    else:
        print("‚úÖ –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –ù–ï –∑–º—ñ—à—É—î—Ç—å—Å—è –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é —Ç–æ–Ω—É")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —Å—Ç–∞—Ä–∏–π create_context_aware_prompt –ø–æ–≤–µ—Ä—Ç–∞ —Ç–µ —Å–∞–º–µ
    old_result = enhanced_behavior.create_context_aware_prompt(original_text, analysis)
    if old_result != tone_instruction:
        print("‚úÖ –°—Ç–∞—Ä–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î –Ω–∞ –Ω–æ–≤—É")
    
    return True

async def test_gemini_integration():
    """–¢–µ—Å—Ç—É—î —â–æ Gemini –æ—Ç—Ä–∏–º—É—î –æ–∫—Ä–µ–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é"""
    
    class MockMessage:
        def __init__(self, text):
            self.text = text
            self.from_user = type('User', (), {'full_name': 'TestUser'})()
            self.chat = type('Chat', (), {'id': 12345})()
    
    message = MockMessage("–ü—Ä–∏–≤—ñ—Ç, —è–∫ —Å–ø—Ä–∞–≤–∏?")
    tone_instruction = "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –≤–µ—Å–µ–ª–æ —Ç–∞ –∞–±—Å—É—Ä–¥–Ω–æ. (–¢–∏–ø —Ä–æ–∑–º–æ–≤–∏: –ø–æ–±—É—Ç–æ–≤–µ, –Ω–∞—Å—Ç—Ä—ñ–π: –ø–æ–∑–∏—Ç–∏–≤, –∑–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: 7/10)"
    
    print("ü§ñ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∑ Gemini...")
    print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '{message.text}'")
    print(f"–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: '{tone_instruction}'")
    
    # –°–∏–º—É–ª—é—î–º–æ –≤–∏–∫–ª–∏–∫ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)
    print("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –æ–∫—Ä–µ–º–æ")
    return True

def test_realistic_scenario():
    """–¢–µ—Å—Ç—É—î —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π —è–∫ –∑ —Å–∫—Ä—ñ–Ω—à–æ—Ç—É"""
    
    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç—É
    chat_context = [
        "—Ü–∏—Ñ—Ä—ñ–∫",
        "–Ω–µ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ñ–∫",
        "—Ü—è –≤–∞–≥–∞ –∫–æ–∂–Ω–æ–≥–æ –Ω–µ–ø—Ä–∏–≤—ñ–ª–µ–π–Ω–æ–≥–æ –ø–∏–ª–∏–Ω–æ–∫",
        "—â–æ –ø—Ä–æ–≥–∞–Ω—Ü—é–≤–∞–ª–∏ –∫—Ä—ñ–∑—å –µ–∫—Ä–∞–Ω"
    ]
    
    current_message = "–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –º—ñ–Ω—ñ–º—É–º—É —É –¥–∂–µ—Ä–µ–ª–∞ –ø—ñ–¥ –≤–ª–∞–¥–Ω—É –ø–∏—Ç–∞–Ω–Ω—è –∑—ñ –∑–≤—É–∫–∞"
    
    print("üé≠ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é:")
    print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {chat_context}")
    print(f"–ü–æ—Ç–æ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '{current_message}'")
    
    # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ
    analysis = enhanced_behavior.analyze_conversation_context(current_message, chat_context)
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª—ñ–∑—É: {analysis['type']}, {analysis['mood']}, {analysis['engagement']}/10")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é
    tone_instruction = enhanced_behavior.get_tone_instruction(analysis)
    
    print(f"–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è —Ç–æ–Ω—É: '{tone_instruction}'")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç—É –ù–ï –∑–º—ñ—à–∞—î—Ç—å—Å—è –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é
    for ctx_msg in chat_context:
        if ctx_msg in tone_instruction:
            print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: –ö–æ–Ω—Ç–µ–∫—Å—Ç '{ctx_msg}' –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó!")
            return False
    
    if current_message in tone_instruction:
        print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: –ü–æ—Ç–æ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó!")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ù–ï –∑–º—ñ—à—É—î—Ç—å—Å—è –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏")
    return True

def main():
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤—Å—Ç–∞–≤–ª—è–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É\n")
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
    if not test_context_not_mixed():
        print("‚ùå –¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω–∏–π")
        return
    
    print()
    
    # –¢–µ—Å—Ç 2: –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ Gemini
    if not asyncio.run(test_gemini_integration()):
        print("‚ùå –¢–µ—Å—Ç 2 –ø—Ä–æ–≤–∞–ª–µ–Ω–∏–π")
        return
    
    print()
    
    # –¢–µ—Å—Ç 3: –†–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π
    if not test_realistic_scenario():
        print("‚ùå –¢–µ—Å—Ç 3 –ø—Ä–æ–≤–∞–ª–µ–Ω–∏–π")
        return
    
    print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ñ! –ö–æ–Ω—Ç–µ–∫—Å—Ç –±—ñ–ª—å—à–µ –ù–ï –≤—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
    print("‚úÖ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–æ–Ω—É –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –æ–∫—Ä–µ–º–æ –≤ Gemini")
    print("‚úÖ –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –Ω–µ–∑–º—ñ–Ω–Ω–∏–º–∏")

if __name__ == "__main__":
    main()
