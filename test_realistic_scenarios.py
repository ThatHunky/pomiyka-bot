#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
sys.path.append('.')

def test_realistic_scenarios():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —á–∞—Ç—ñ–≤"""
    print("üá∫üá¶ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤...")
    
    try:
        from bot.modules.enhanced_behavior import (
            analyze_conversation_context, 
            create_context_aware_prompt
        )
        
        # –†–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —á–∞—Ç—ñ–≤
        scenarios = [
            {
                "message": "–ì—Ä—è–≥, —â–æ —Ç–∏ –¥—É–º–∞—î—à –ø—Ä–æ –Ω–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó AI?",
                "expected_type": "—Ç–µ—Ö–Ω—ñ—á–Ω–µ",
                "expected_engagement": "high"
            },
            {
                "message": "–ë–ª—è—Ç—å, –∑–Ω–æ–≤—É —Å–µ—Ä–≤–µ—Ä —É–ø–∞–≤! –•—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –±–µ–∫–µ–Ω–¥?",
                "expected_type": "—Ç–µ—Ö–Ω—ñ—á–Ω–µ", 
                "expected_engagement": "medium"
            },
            {
                "message": "–ê —â–æ —Ç–∞–∫–µ —Å–ø—Ä–∞–≤–∂–Ω—è –¥—Ä—É–∂–±–∞? –ß–∏ —ñ—Å–Ω—É—î –≤–æ–Ω–∞ –≤–∑–∞–≥–∞–ª—ñ?",
                "expected_type": "—Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–µ",
                "expected_engagement": "medium"
            },
            {
                "message": "–•–∞—Ö–∞—Ö–∞, —Ü–µ –Ω–∞–π–∫—Ä–∞—â–∏–π –º–µ–º —Ä–æ–∫—É! üòÇüòÇüòÇ",
                "expected_type": "–≤–µ—Å–µ–ª–µ",
                "expected_engagement": "low"
            },
            {
                "message": "–ì—Ä—è–≥, —Ç–∏ –¥—É—Ä–∞–∫ —á–∏ –ø—Ä–∏–∫–∏–¥–∞—î—à—Å—è?",
                "expected_type": "–∫–æ–Ω—Ñ–ª—ñ–∫—Ç",
                "expected_engagement": "high"
            },
            {
                "message": "–°—å–æ–≥–æ–¥–Ω—ñ —Ç–∞–∫ —Å—É–º–Ω–æ... –Ω–µ —Ö–æ—á–µ—Ç—å—Å—è –Ω—ñ—á–æ–≥–æ —Ä–æ–±–∏—Ç–∏ üò¢",
                "expected_type": "–µ–º–æ—Ü—ñ–π–Ω–µ",
                "expected_engagement": "low"
            },
            {
                "message": "–ë–æ—Ç –ì—Ä—è–≥, —Ä–æ–∑–∫–∞–∂–∏ –ø—Ä–æ –∫–≤–∞–Ω—Ç–æ–≤—É —Ñ—ñ–∑–∏–∫—É —Ç–∞ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –≤—Å–µ—Å–≤—ñ—Ç–∏",
                "expected_type": "—Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–µ",
                "expected_engagement": "high"
            },
            {
                "message": "–£ –º–µ–Ω–µ –ø—Ä–æ–±–ª–µ–º–∞ –∑ React hooks, –≤–æ–Ω–∏ –Ω–µ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è",
                "expected_type": "—Ç–µ—Ö–Ω—ñ—á–Ω–µ",
                "expected_engagement": "medium"
            }
        ]
        
        print(f"üìä –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è {len(scenarios)} —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤:")
        print("=" * 70)
        
        for i, scenario in enumerate(scenarios, 1):
            message = scenario["message"]
            analysis = analyze_conversation_context(message)
            
            print(f"\n{i}. '{message}'")
            print(f"   üéØ –¢–∏–ø: {analysis['type']} (–æ—á—ñ–∫—É–≤–∞–≤—Å—è: {scenario['expected_type']})")
            print(f"   üòä –ù–∞—Å—Ç—Ä—ñ–π: {analysis['mood']}")
            print(f"   ‚ö° –ó–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: {analysis['engagement']}/10 ({scenario['expected_engagement']})")
            print(f"   üí¨ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏: {analysis['should_respond']}")
            print(f"   üé® –¢–æ–Ω: {analysis['response_tone']}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–æ—á–Ω—ñ—Å—Ç—å
            type_correct = analysis['type'] == scenario['expected_type']
            engagement_levels = {"low": (1, 4), "medium": (5, 7), "high": (8, 10)}
            expected_range = engagement_levels[scenario['expected_engagement']]
            engagement_correct = expected_range[0] <= analysis['engagement'] <= expected_range[1]
            
            status = "‚úÖ" if type_correct and engagement_correct else "‚ö†Ô∏è" 
            if not type_correct:
                status += f" (—Ç–∏–ø: –æ—á—ñ–∫—É–≤–∞–≤—Å—è {scenario['expected_type']})"
            if not engagement_correct:
                status += f" (–∑–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: –æ—á—ñ–∫—É–≤–∞–ª–∞—Å—å {scenario['expected_engagement']})"
            
            print(f"   {status}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–º—Ç –¥–ª—è –≤–∏—Å–æ–∫–æ—ó –∑–∞–ª—É—á–µ–Ω–æ—Å—Ç—ñ
            if analysis['engagement'] >= 8:
                prompt = create_context_aware_prompt(message, analysis)
                print(f"   üìù –ü—Ä–æ–º—Ç: {prompt[:150]}...")
        
        print("\nüéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_realistic_scenarios()
