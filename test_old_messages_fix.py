#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å - —à–≤–∏–¥–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from datetime import datetime, timezone, timedelta
from bot.bot_config import PERSONA

# –°–∏–º—É–ª—è—Ü—ñ—è BOT_START_TIME
BOT_START_TIME = datetime.now(timezone.utc)

def is_message_too_old_test(message_date: datetime) -> bool:
    """–¢–µ—Å—Ç–æ–≤–∞ –≤–µ—Ä—Å—ñ—è —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    if not PERSONA["ignore_old_messages"]:
        return False
    if not message_date:
        return False
    
    # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ message_time —É UTC —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    message_time = message_date
    if message_time.tzinfo is None:
        message_time = message_time.replace(tzinfo=timezone.utc)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–µ, —è–∫—â–æ –≤–æ–Ω–æ –±—É–ª–æ —Å—Ç–≤–æ—Ä–µ–Ω–µ –î–û –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
    # –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –±—É—Ñ–µ—Ä–Ω—É –∑–æ–Ω—É (30 —Å–µ–∫—É–Ω–¥) –¥–ª—è —á–∞—Å–æ–≤–∏—Ö —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç–µ–π
    buffer_zone = timedelta(seconds=30)
    cutoff_time = BOT_START_TIME - buffer_zone
    
    if message_time < cutoff_time:
        print(f"üï∞Ô∏è –°—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: —Å—Ç–≤–æ—Ä–µ–Ω–æ {message_time}, –±–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ {BOT_START_TIME}")
        return True
    
    return False

def test_old_message_logic():
    """–¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print(f"‚è∞ –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {BOT_START_TIME}")
    print(f"üõ°Ô∏è –Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è –≤–∫–ª—é—á–µ–Ω–æ: {PERSONA['ignore_old_messages']}")
    print("-" * 60)
    
    # –¢–µ—Å—Ç 1: –î—É–∂–µ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (1 –≥–æ–¥–∏–Ω—É –Ω–∞–∑–∞–¥)
    old_message = BOT_START_TIME - timedelta(hours=1)
    result1 = is_message_too_old_test(old_message)
    print(f"1Ô∏è‚É£ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 1 –≥–æ–¥ –Ω–∞–∑–∞–¥: {old_message} ‚Üí {'–Ü–ì–ù–û–†–£–Ñ–ú–û' if result1 else '–û–ë–†–û–ë–õ–Ø–Ñ–ú–û'}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 5 —Ö–≤–∏–ª–∏–Ω –Ω–∞–∑–∞–¥
    medium_old = BOT_START_TIME - timedelta(minutes=5)
    result2 = is_message_too_old_test(medium_old)
    print(f"2Ô∏è‚É£ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 5 —Ö–≤ –Ω–∞–∑–∞–¥: {medium_old} ‚Üí {'–Ü–ì–ù–û–†–£–Ñ–ú–û' if result2 else '–û–ë–†–û–ë–õ–Ø–Ñ–ú–û'}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 1 —Ö–≤–∏–ª–∏–Ω—É –Ω–∞–∑–∞–¥ (–∞–ª–µ –¥–æ –∑–∞–ø—É—Å–∫—É)
    slightly_old = BOT_START_TIME - timedelta(minutes=1)
    result3 = is_message_too_old_test(slightly_old)
    print(f"3Ô∏è‚É£ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 1 —Ö–≤ –Ω–∞–∑–∞–¥: {slightly_old} ‚Üí {'–Ü–ì–ù–û–†–£–Ñ–ú–û' if result3 else '–û–ë–†–û–ë–õ–Ø–Ñ–ú–û'}")
    
    # –¢–µ—Å—Ç 4: –ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É)
    new_message = BOT_START_TIME + timedelta(seconds=10)
    result4 = is_message_too_old_test(new_message)
    print(f"4Ô∏è‚É£ –ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {new_message} ‚Üí {'–Ü–ì–ù–û–†–£–Ñ–ú–û' if result4 else '–û–ë–†–û–ë–õ–Ø–Ñ–ú–û'}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±—É—Ñ–µ—Ä–Ω—ñ–π –∑–æ–Ω—ñ (25 —Å–µ–∫—É–Ω–¥ –Ω–∞–∑–∞–¥)
    buffer_message = BOT_START_TIME - timedelta(seconds=25)
    result5 = is_message_too_old_test(buffer_message)
    print(f"5Ô∏è‚É£ –ë—É—Ñ–µ—Ä–Ω–∞ –∑–æ–Ω–∞ (25—Å –Ω–∞–∑–∞–¥): {buffer_message} ‚Üí {'–Ü–ì–ù–û–†–£–Ñ–ú–û' if result5 else '–û–ë–†–û–ë–õ–Ø–Ñ–ú–û'}")
    
    print("-" * 60)
    
    # –û—á—ñ–∫—É–≤–∞–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    expected = [True, True, True, False, False]  # –ø–µ—Ä—à—ñ 3 —Å—Ç–∞—Ä—ñ, –æ—Å—Ç–∞–Ω–Ω—ñ 2 –Ω–æ–≤—ñ
    actual = [result1, result2, result3, result4, result5]
    
    if expected == actual:
        print("‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ! –õ–æ–≥—ñ–∫–∞ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
        return True
    else:
        print("‚ùå –¢–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ!")
        print(f"–û—á—ñ–∫—É–≤–∞–Ω–æ: {expected}")
        print(f"–û—Ç—Ä–∏–º–∞–Ω–æ:  {actual}")
        return False

if __name__ == "__main__":
    success = test_old_message_logic()
    exit(0 if success else 1)
