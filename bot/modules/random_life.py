import os
import random
from bot.modules import gemini
import asyncio
from typing import List, Optional
import inspect

# –°–ª–æ–≤–∞-—Ç—Ä–∏–≥–µ—Ä–∏ –¥–ª—è –∑–≥–∞–¥–∫–∏ –±–æ—Ç–∞
TRIGGERS = [
    os.getenv("BOT_PERSONA_NAME", "–≥—Ä—è–≥").lower(),
    "@gryag_bot", "–≥—Ä—è–≥", "–≥—Ä—è–≥—ñ–∫", "–≥—Ä—è–≥—É", "–≥—Ä—è–≥–∞", "–≥—Ä—è–≥–æ–º", "–±–æ—Ç", "–±–æ—Ç–µ"
]

# –ú–æ–∂–ª–∏–≤—ñ —Ä–∞–Ω–¥–æ–º–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–¥—Ä—É–∂–µ–ª—é–±–Ω—ñ)
RANDOM_REPLIES = [
    "–ü—Ä–∏–≤—ñ—Ç! –©–æ —Ü—ñ–∫–∞–≤–æ–≥–æ?",
    "–Ø —Ç—É—Ç! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?",
    "–ú–µ–Ω–µ –∫–ª–∏–∫–∞–ª–∏? –ó–∞–≤–∂–¥–∏ —Ä–∞–¥–∏–π –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è!",
    "–û, –∑–Ω–æ–≤—É –ø—Ä–æ –º–µ–Ω–µ! –¶–µ –ø—Ä–∏—î–º–Ω–æ üòä",
    "–ú–æ–∂–ª–∏–≤–æ, —á–∞—Å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ?",
    "–Ø –≤—Å–µ –±–∞—á—É —ñ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–∑–º–æ–≤–∏!",
    "–•—Ç–æ—Å—å —Ö–æ—á–µ –¥—Ä—É–∂–Ω—å–æ—ó –±–µ—Å—ñ–¥–∏?",
    "–õ—é–±–ª—é, –∫–æ–ª–∏ –º–µ–Ω–µ –∑–≥–∞–¥—É—é—Ç—å! –©–æ –Ω–æ–≤–æ–≥–æ?"
]

def should_reply_randomly(text: str) -> bool:
    text = text.lower()
    return any(trigger in text for trigger in TRIGGERS)

async def get_random_reply(context_messages: Optional[List[str]] = None) -> str:
    # –î–∏–Ω–∞–º—ñ—á–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É  
    persona_base = (
        "–¢–∏ ‚Äî –ì—Ä—è–≥, –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω–∏–π —á–∞—Ç-–±–æ—Ç –∑ –ª–µ–≥–∫–∏–º –≥—É–º–æ—Ä–æ–º. "
        "–¢–∏ –∫–æ—Ä–∏—Å–Ω–∏–π, —Ä–æ–∑—É–º–Ω–∏–π —Ç–∞ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤–∏–π –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º–æ–≤—É —Ü—ñ–∫–∞–≤–æ—é —Ä–µ–ø–ª—ñ–∫—É. "
        "–¢–≤—ñ–π —Å—Ç–∏–ª—å ‚Äî —Ü–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ñ—Å—Ç—å, –ª–µ–≥–∫–∏–π –≥—É–º–æ—Ä —Ç–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–µ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è. "
        "–¢–∏ –∞–¥–µ–∫–≤–∞—Ç–Ω–∏–π —Ç–∞ –ø—Ä–∏—î–º–Ω–∏–π —É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ. "
        "–ó–∞–≤–∂–¥–∏ –ø—ñ–¥–ª–∞—à—Ç–æ–≤—É–π —Å–≤–æ—é –º–∞–Ω–µ—Ä—É –ø—ñ–¥ –Ω–∞—Å—Ç—Ä—ñ–π —á–∞—Ç—É, –∞–ª–µ –∑–∞–ª–∏—à–∞–π—Å—è –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º. "
        "–Ø–∫—â–æ –≤ —á–∞—Ç—ñ –∂–∞—Ä—Ç—É—é—Ç—å ‚Äî –¥–æ–¥–∞–π —Å–≤—ñ–π –¥–æ—Ç–µ–ø–Ω–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä. –Ø–∫—â–æ —Å–µ—Ä–π–æ–∑–Ω–æ ‚Äî –±—É–¥—å –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–º. "
        "–ó–≥–µ–Ω–µ—Ä—É–π –∫–æ—Ä–æ—Ç–∫—É, –¥–æ—Ç–µ–ø–Ω—É, —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–≥–∞–¥–∫—É –ø—Ä–æ —Å–µ–±–µ —É –≥—Ä—É–ø–æ–≤–æ–º—É —á–∞—Ç—ñ. –ë—É–¥—å –ø—Ä–∏—î–º–Ω–∏–º —Ç–∞ –∫–æ—Ä–∏—Å–Ω–∏–º —É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ."
    )
    prompt = persona_base
    if context_messages:
        prompt += " –û—Å—å –∫—ñ–ª—å–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —á–∞—Ç—É: " + " ".join(context_messages)
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–µ–π–∫–æ–≤–∏–π Message –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
    class FakeMessage:
        def __init__(self, text: str):
            self.text = text
            self.from_user = type('User', (), {'full_name': '–ì—Ä—è–≥'})
            self.chat = type('Chat', (), {'id': 0})
    fake_msg = FakeMessage(prompt)
    reply = await gemini.process_message(fake_msg)
    return reply.strip()

def get_random_reply_sync(context_messages: Optional[List[str]] = None) -> str:
    # –î–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ sync-–∫–æ–¥–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–µ –∑ async context)
    import asyncio
    coro = get_random_reply(context_messages)
    if inspect.iscoroutine(coro):
        return asyncio.run(coro)
    return coro
