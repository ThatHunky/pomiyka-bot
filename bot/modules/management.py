# –ú–æ–¥—É–ª—å –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É (–¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏—à–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É)
from aiogram.types import Message

async def handle(message: Message):
    from bot.modules.gemini import process_message
    class FakeMessage:
        def __init__(self, text: str):
            self.text = text
            self.from_user = type('User', (), {'full_name': '–ì—Ä—è–≥'})
            self.chat = type('Chat', (), {'id': 0})
    
    # –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–µ–∑ Gemini
    if message.text == "/clear_context":
        try:
            from bot.bot_config import DB_PATH
            import os
            if os.path.exists(DB_PATH):
                os.remove(DB_PATH)
                await message.reply("üßπ –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω–æ! –ü–∞–º'—è—Ç—å —Å—Ç–µ—Ä—Ç–∞.")
            else:
                await message.reply("ü§î –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –Ω—ñ—á–æ–≥–æ –æ—á–∏—â–∞—Ç–∏.")
            return
        except Exception as e:
            await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: {e}")
            return
    
    elif message.text == "/stats":
        try:
            from bot.modules.context_sqlite import get_global_stats
            from bot.bot_config import DB_PATH
            import os
            
            if not os.path.exists(DB_PATH):
                stats_text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞\n‚Ä¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: 0\n‚Ä¢ –ß–∞—Ç—ñ–≤: 0"
            else:
                stats = get_global_stats()
                stats_text = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –±–∞–∑—ñ: {stats['total_messages']}\n‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö —á–∞—Ç—ñ–≤: {stats['active_chats']}\n‚Ä¢ –ë–∞–∑–∞: {DB_PATH}"
            
            await message.reply(stats_text)
            return
        except Exception as e:
            await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return
    
    elif message.text == "/rescan":
        try:
            from bot.modules.chat_scanner import reset_chat_scan_state, auto_scan_chat_history
            from aiogram import Bot
            from bot.bot_config import PERSONA
            
            chat_id = message.chat.id
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç
            if message.chat.type not in ["group", "supergroup"]:
                await message.reply("‚ùå –ö–æ–º–∞–Ω–¥–∞ /rescan –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –≤ –≥—Ä—É–ø–æ–≤–∏—Ö —á–∞—Ç–∞—Ö.")
                return
            
            # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è
            reset_chat_scan_state(chat_id)
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –±–æ—Ç–∞ –∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É main.py
            import sys
            if hasattr(sys.modules.get('bot.main'), 'bot'):
                bot = sys.modules['bot.main'].bot
                
                await message.reply("üîÑ –ü–æ—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä–Ω–µ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É...")
                
                # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
                import asyncio
                asyncio.create_task(auto_scan_chat_history(bot, chat_id))
                
                await message.reply("‚úÖ –°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ! –Ü—Å—Ç–æ—Ä—ñ—è —á–∞—Ç—É –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–∞.")
            else:
                await message.reply("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –±–æ—Ç–∞ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è.")
            
            return
        except Exception as e:
            await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—ñ: {e}")
            return
    
    elif message.text == "/reactions":
        try:
            from bot.modules.reactions import get_all_available_reactions
            reactions_list = get_all_available_reactions()
            reactions_text = "üé≠ –î–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó –±–æ—Ç–∞:\n" + " ".join(reactions_list[:20])  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 20
            if len(reactions_list) > 20:
                reactions_text += f"\n... —Ç–∞ —â–µ {len(reactions_list) - 20} —ñ–Ω—à–∏—Ö!"
            await message.reply(reactions_text)
            return
        except Exception as e:
            await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∞–∫—Ü—ñ–π: {e}")
            return
    
    # –í—Å—ñ —ñ–Ω—à—ñ –∫–æ–º–∞–Ω–¥–∏ —á–µ—Ä–µ–∑ –∞–±—Å—É—Ä–¥–Ω–æ–≥–æ –ì—Ä—è–≥–∞
    if message.text == "/stats":
        prompt = (
            "–¢–∏ ‚Äî –ì—Ä—è–≥, –∞–±—Å—É—Ä–¥–Ω–∏–π –±–æ—Ç-–¥—É—Ö. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –∞–¥–º—ñ–Ω—Å—å–∫—ñ –∫–æ–º–∞–Ω–¥–∏ —É —Å—Ç–∏–ª—ñ –∞–±—Å—É—Ä–¥—É, –º–µ–º—ñ–≤, –ø–∞—Ä–∞–¥–æ–∫—Å—ñ–≤. "
            "–û—Å—å –∫–æ–º–∞–Ω–¥–∞: /stats. –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –∫–æ—Ä–æ—Ç–∫–æ—é, –¥–æ—Ç–µ–ø–Ω–æ—é, –∞–ª–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—é –ø—Ä–æ —Å—Ç–∞–Ω –±–æ—Ç–∞."
        )
    elif message.text == "/help":
        prompt = (
            "–¢–∏ ‚Äî –ì—Ä—è–≥, –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π –±–æ—Ç –∑ –ª–µ–≥–∫–∏–º –≥—É–º–æ—Ä–æ–º. –ü–æ–∫–∞–∂–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∞–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥ —É –≤–µ—Å–µ–ª–æ–º—É, –∞–ª–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ–º—É —Å—Ç–∏–ª—ñ. "
            "–ö–æ–º–∞–Ω–¥–∏: /stats, /help, /clear_context, /rescan, /reactions, /import_history"
        )
    else:
        prompt = (
            "–¢–∏ ‚Äî –ì—Ä—è–≥, –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π –±–æ—Ç –∑ –ª–µ–≥–∫–∏–º –≥—É–º–æ—Ä–æ–º. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –∞–¥–º—ñ–Ω—Å—å–∫—ñ –∫–æ–º–∞–Ω–¥–∏ —É –≤–µ—Å–µ–ª–æ–º—É, –¥—Ä—É–∂–Ω—å–æ–º—É —Å—Ç–∏–ª—ñ. "
            f"–û—Å—å –∫–æ–º–∞–Ω–¥–∞: {message.text}. –Ø–∫—â–æ –Ω–µ –∑–Ω–∞—î—à ‚Äî –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π /help"
        )
    
    fake_msg = FakeMessage(prompt)
    reply = await process_message(fake_msg)
    await message.reply(reply)
