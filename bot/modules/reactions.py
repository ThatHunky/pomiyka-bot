# –ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∞–∫—Ü—ñ–π –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
import random
import asyncio
from aiogram.types import Message
from bot.bot_config import PERSONA

# –ù–∞–±—ñ—Ä –µ–º–æ–¥–∂—ñ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ–π (–ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è Telegram)
REACTION_EMOJIS = [
    "üëç", "üëé", "‚ù§Ô∏è", "üî•", "ü•∞", "üëè", "üòÅ", "ü§î", 
    "ü§Ø", "üò±", "ü§¨", "üò¢", "üéâ", "ü§©", "ü§Æ", "üí©",
    "üôè", "üëå", "üïä", "ü§°", "ü•±", "ü•¥", "üòç", "üê≥",
    "‚ù§Ô∏è‚Äçüî•", "üåö", "üå≠", "üíØ", "ü§£", "‚ö°Ô∏è", "üçå", "üèÜ"
]

# –ü–æ–∑–∏—Ç–∏–≤–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
POSITIVE_REACTIONS = ["üëç", "‚ù§Ô∏è", "üî•", "ü•∞", "üëè", "üòÅ", "üéâ", "ü§©", "üíØ", "üèÜ"]

# –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ñ/–∞–±—Å—É—Ä–¥–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó –¥–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å  
NEUTRAL_REACTIONS = ["ü§î", "ü§Ø", "üôè", "üëå", "üïä", "ü§°", "üåö", "üå≠", "‚ö°Ô∏è", "üçå"]

# –ù–µ–≥–∞—Ç–∏–≤–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó (—Ä—ñ–¥–∫–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è)
NEGATIVE_REACTIONS = ["üëé", "ü§¨", "üò¢", "ü§Æ", "üí©", "ü•±", "ü•¥"]

def should_react_to_message(message: Message) -> bool:
    """–í–∏–∑–Ω–∞—á–∞—î, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–∞–≤–∏—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    if not message.text:
        return False
    
    text = message.text.lower()
    
    # –ó–∞–≤–∂–¥–∏ —Ä–µ–∞–≥—É—î–º–æ –Ω–∞ –∑–≥–∞–¥–∫–∏ –±–æ—Ç–∞
    bot_triggers = ["–≥—Ä—è–≥", "@gryag_bot", "–≥—Ä—è–≥—ñ–∫", "–±–æ—Ç"]
    if any(trigger in text for trigger in bot_triggers):
        return random.random() < 0.7  # 70% —à–∞–Ω—Å —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ –∑–≥–∞–¥–∫—É
    
    # –†–µ–∞–≥—É—î–º–æ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è
    if "?" in text or any(word in text for word in ["—â–æ", "—è–∫", "–∫–æ–ª–∏", "–¥–µ", "—á–æ–º—É", "—Ö—Ç–æ"]):
        return random.random() < 0.3  # 30% —à–∞–Ω—Å –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è
    
    # –†–µ–∞–≥—É—î–º–æ –Ω–∞ –µ–º–æ—Ü—ñ–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    emotional_words = ["–∫–ª–∞—Å–Ω–æ", "—Å—É–ø–µ—Ä", "–∫—Ä—É—Ç–∞", "–ª–∞–π–Ω–æ", "–¥—É—Ä–Ω—è", "–±–ª—ñ–Ω", "–æ–≥–æ", "–≤–∞—É"]
    if any(word in text for word in emotional_words):
        return random.random() < 0.4  # 40% —à–∞–Ω—Å –Ω–∞ –µ–º–æ—Ü—ñ–π–Ω—ñ —Å–ª–æ–≤–∞
    
    # –†–∞–Ω–¥–æ–º–Ω–∞ —Ä–µ–∞–∫—Ü—ñ—è –Ω–∞ –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ä—ñ–¥–∫–æ)
    return random.random() < PERSONA.get("reaction_chance", 0.05)  # 5% –±–∞–∑–æ–≤–∏–π —à–∞–Ω—Å

def get_reaction_for_message(message: Message) -> str:
    """–í–∏–±–∏—Ä–∞—î –ø—ñ–¥—Ö–æ–¥—è—â—É —Ä–µ–∞–∫—Ü—ñ—é –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    if not message.text:
        return random.choice(NEUTRAL_REACTIONS)
    
    text = message.text.lower()
    
    # –ü–æ–∑–∏—Ç–∏–≤–Ω—ñ —Å–ª–æ–≤–∞ = –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó
    positive_words = ["–∫–ª–∞—Å–Ω–æ", "—Å—É–ø–µ—Ä", "–∫—Ä—É—Ç–∞", "–¥—è–∫—É—é", "–∫—Ä—É—Ç–æ", "–º–æ–ª–æ–¥–µ—Ü—å", "–≤–∞—É", "–æ–≥–æ"]
    if any(word in text for word in positive_words):
        return random.choice(POSITIVE_REACTIONS)
    
    # –ù–µ–≥–∞—Ç–∏–≤–Ω—ñ —Å–ª–æ–≤–∞ = –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ñ/–∞–±—Å—É—Ä–¥–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó (–Ω–µ —Ö–æ—á–µ–º–æ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–µ–≥–∞—Ç–∏–≤)
    negative_words = ["–ª–∞–π–Ω–æ", "–¥—É—Ä–Ω—è", "–±–ª—ñ–Ω", "–ø–æ–≥–∞–Ω–∏–π", "–∂–∞—Ö"]
    if any(word in text for word in negative_words):
        return random.choice(NEUTRAL_REACTIONS)
    
    # –ó–≥–∞–¥–∫–∏ –±–æ—Ç–∞ = –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó
    bot_triggers = ["–≥—Ä—è–≥", "@gryag_bot", "–≥—Ä—è–≥—ñ–∫", "–±–æ—Ç"]
    if any(trigger in text for trigger in bot_triggers):
        return random.choice(POSITIVE_REACTIONS)
    
    # –ü–∏—Ç–∞–Ω–Ω—è = –∑–∞–¥—É–º–ª–∏–≤—ñ —Ä–µ–∞–∫—Ü—ñ—ó
    if "?" in text:
        return random.choice(["ü§î", "ü§Ø", "üëå", "üôè"])
    
    # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º - –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ñ/–∞–±—Å—É—Ä–¥–Ω—ñ
    return random.choice(NEUTRAL_REACTIONS)

async def maybe_react_to_message(message: Message) -> bool:
    """–ú–æ–∂–ª–∏–≤–æ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü—ñ—é –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ü–æ–≤–µ—Ä—Ç–∞—î True —è–∫—â–æ —Ä–µ–∞–∫—Ü—ñ—é –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ."""
    try:
        if should_react_to_message(message):
            reaction = get_reaction_for_message(message)
            
            # –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ —â–æ–± –≤–∏–≥–ª—è–¥–∞–ª–æ –ø—Ä–∏—Ä–æ–¥–Ω–æ
            await asyncio.sleep(random.uniform(0.5, 2.0))
            
            # –°—Ç–∞–≤–∏–º–æ —Ä–µ–∞–∫—Ü—ñ—é
            await message.react(reaction)
            return True
            
    except Exception as e:
        # –Ø–∫—â–æ —Ä–µ–∞–∫—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –±–æ—Ç –Ω–µ –º–∞—î –ø—Ä–∞–≤), –ø—Ä–æ—Å—Ç–æ —ñ–≥–Ω–æ—Ä—É—î–º–æ
        import logging
        logging.debug(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é: {e}")
        
    return False

def get_all_available_reactions() -> list:
    """–ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–µ–∞–∫—Ü—ñ–π"""
    return REACTION_EMOJIS.copy()
