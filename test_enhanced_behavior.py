#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append('.')

def test_enhanced_behavior():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è –∞–Ω–∞–ª—ñ–∑—É –∫–æ–Ω—Ç–µ–∫—Å—Ç—É"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è —Å–∏—Ç—É–∞—Ü—ñ–π...")
    
    try:
        # –Ü–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
        from bot.modules.enhanced_behavior import (
            analyze_conversation_context, 
            create_context_aware_prompt,
            get_chat_trends,
            should_intervene_spontaneously
        )
        print("‚úÖ –ú–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
        
        # –¢–µ—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä—ñ–∑–Ω–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ–π
        test_messages = [
            "–ü—Ä–∏–≤—ñ—Ç –ì—Ä—è–≥, —è–∫ —Å–ø—Ä–∞–≤–∏?",
            "–•–∞—Ö–∞, —Ü–µ –¥—É–∂–µ —Å–º—ñ—à–Ω–æ! üòÇ",
            "–£ –º–µ–Ω–µ –ø—Ä–æ–±–ª–µ–º–∞ –∑ –∫–æ–¥–æ–º –≤ Python",
            "–©–æ —Ç–∞–∫–µ –∂–∏—Ç—Ç—è —ñ –≤ —á–æ–º—É —Å–µ–Ω—Å –±—É—Ç—Ç—è?",
            "–î—É—Ä–µ–Ω—å, —Ç–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–∑—É–º—ñ—î—à!",
            "–°—å–æ–≥–æ–¥–Ω—ñ –ø–æ–≥–æ–¥–∞ —á—É–¥–æ–≤–∞"
        ]
        
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É:")
        print("-" * 50)
        
        for i, message in enumerate(test_messages, 1):
            print(f"\n{i}. –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '{message}'")
            
            # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
            analysis = analyze_conversation_context(message)
            
            print(f"   –¢–∏–ø: {analysis['type']}")
            print(f"   –ù–∞—Å—Ç—Ä—ñ–π: {analysis['mood']}")
            print(f"   –ó–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: {analysis['engagement']}/10")
            print(f"   –í–∞—Ä—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏: {analysis['should_respond']}")
            print(f"   –¢–æ–Ω: {analysis['response_tone']}")
            
            # –Ø–∫—â–æ –≤–∞—Ä—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏, –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–º—Ç
            if analysis['should_respond']:
                prompt = create_context_aware_prompt(message, analysis)
                print(f"   üí¨ –ü—Ä–æ–º—Ç (–ø–µ—Ä—à—ñ 100 —Å–∏–º–≤–æ–ª—ñ–≤): {prompt[:100]}...")
        
        print("\nüéØ –¢–µ—Å—Ç —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å–∫—Ä—ñ–Ω—É:")
        special_message = "–ì—Ä—è–≥? –û, —Ü–µ –Ω–µ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è, —Ü–µ –∫–æ–ª–µ–∫—Ü—ñ—è –ø–æ–º–∏–ª–æ–∫ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è, —è–∫ —Ç–∞—î–º–Ω–∏—á—ñ –ø–µ—Ä–ª–∏–Ω–∏ –Ω–∞ –¥–Ω—ñ –æ–∫–µ–∞–Ω—É —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É."
        analysis = analyze_conversation_context(special_message)
        
        print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '{special_message}'")
        print(f"–¢–∏–ø: {analysis['type']}")
        print(f"–ù–∞—Å—Ç—Ä—ñ–π: {analysis['mood']}")
        print(f"–ó–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: {analysis['engagement']}/10")
        print(f"–í–∞—Ä—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏: {analysis['should_respond']}")
        print(f"–¢–æ–Ω: {analysis['response_tone']}")
        
        if analysis['should_respond']:
            prompt = create_context_aware_prompt(special_message, analysis)
            print(f"\nüí≠ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º—Ç:")
            print("=" * 60)
            print(prompt)
            print("=" * 60)
        
        print("\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_enhanced_behavior()
