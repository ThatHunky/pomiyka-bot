#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
"""

import sys
import os
import time

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'bot'))

def test_integration():
    """–¢–µ—Å—Ç—É—î –±–∞–∑–æ–≤—É —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é"""
    
    try:
        from bot.modules.utils import FakeMessage
        from bot.modules.enhanced_behavior import process_message_with_smart_context
        
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –º–æ–¥—É–ª—ñ")
        
        # –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è FakeMessage –∑ –Ω–æ–≤–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        fake_msg = FakeMessage(
            text="–¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
            chat_id=123,
            user_name="–¢–µ—Å—Ç–µ—Ä",
            processed_context=[{"text": "–∫–æ–Ω—Ç–µ–∫—Å—Ç", "user": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á", "timestamp": time.time()}],
            recommendations={"max_response_length": 100, "response_style": "concise"}
        )
        
        print(f"‚úÖ FakeMessage —Å—Ç–≤–æ—Ä–µ–Ω–æ: text='{fake_msg.text}', chat_id={fake_msg.chat.id}")
        print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç: {len(fake_msg.processed_context) if fake_msg.processed_context else 0} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó: {fake_msg.recommendations}")
        
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ—ó –æ–±—Ä–æ–±–∫–∏
        context = [
            {"text": "–ü—Ä–∏–≤—ñ—Ç", "user": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á1", "timestamp": time.time() - 100},
            {"text": "–Ø–∫ —Å–ø—Ä–∞–≤–∏?", "user": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á2", "timestamp": time.time() - 50},
        ]
        
        result = process_message_with_smart_context(
            "–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç",
            chat_id=123,
            context=context
        )
        
        print("‚úÖ –ü—Ä–æ—Ü–µ—Å–æ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–∞—Ü—é—î")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {result['should_respond']}")
        print(f"   –¢–æ–Ω: {result['response_tone']}")
        print(f"   –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –≥–æ—Ç–æ–≤–∞: {len(result['tone_instruction'])} —Å–∏–º–≤–æ–ª—ñ–≤")
        
        print("\nüéâ –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!")
        return True
        
    except ImportError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É...")
    
    success = test_integration()
    
    if success:
        print("\n‚úÖ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –≥–æ—Ç–æ–≤–∞!")
        print("\nüìù –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è:")
        print("   ‚Ä¢ FakeMessage –ø—ñ–¥—Ç—Ä–∏–º—É—î processed_context —Ç–∞ recommendations")
        print("   ‚Ä¢ enhanced_behavior.process_message_with_smart_context() - –≥–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è")
        print("   ‚Ä¢ Gemini –æ—Ç—Ä–∏–º—É—î —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ç–∞ –æ–±—Ä–æ–±–ª–µ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å—Ç–∏—Å–Ω–µ–Ω–Ω—è –≤–µ–ª–∏–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É")
        print("   ‚Ä¢ –†–æ–∑—É–º–Ω–∞ –æ–±—Ä–æ–±–∫–∞ —Å–ø–∞–º—É")
        print("\nüìå –ì–æ—Ç–æ–≤–æ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ main.py")
    else:
        print("\n‚ùå –ü–æ—Ç—Ä—ñ–±–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è")
        exit(1)
