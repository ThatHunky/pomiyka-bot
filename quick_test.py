#!/usr/bin/env python3
import asyncio
import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –º–æ–¥—É–ª—ñ–≤ –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

async def quick_test():
    from bot.modules.gemini_enhanced import get_client
    
    print("ü§ñ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –Ω–æ–≤–æ—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ –±–æ—Ç–∞...")
    
    try:
        client = await get_client()
        
        # –¢–µ—Å—Ç –∑ –ø–∏—Ç–∞–Ω–Ω—è–º –ø—Ä–æ –∫–∞–±–µ–ª—ñ (—è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ)
        response = await client.generate_content(
            "–ì—Ä—è–≥, —â–æ –¥—É–º–∞—î—à –ø—Ä–æ —Ü—ñ –ø–æ–º–∏–ª–∫–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑ –∫–∞–±–µ–ª—è–º–∏?",
            context_type="normal"
        )
        
        print(f"üìù –í—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞: {response}")
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        
        await client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(quick_test())
