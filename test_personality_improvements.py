#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π –±–æ—Ç–∞
"""

import asyncio
import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –º–æ–¥—É–ª—ñ–≤ –±–æ—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

from bot.modules.gemini_enhanced import get_client
from bot.modules.enhanced_behavior import analyze_conversation_context, get_tone_instruction
from bot.modules.situation_predictor import get_suggested_response_tone

async def test_personality_fixes():
    """–¢–µ—Å—Ç—É—î –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ –±–æ—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ –±–æ—Ç–∞...")
    
    try:
        # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –±–µ–∑–ø–µ–∫–∏
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –±–µ–∑–ø–µ–∫–∏...")
        client = await get_client()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ safety settings –¥—ñ–π—Å–Ω–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ
        safety_settings = client._get_default_safety_settings()
        minimal_safety = sum(1 for setting in safety_settings if setting.threshold.value == "BLOCK_NONE")
        print(f"   ‚úÖ –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –±–µ–∑–ø–µ–∫–∏: {minimal_safety}/5")
        
        # –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–∏—Ö —Ç–æ–Ω—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ç–æ–Ω—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π...")
        tone = get_suggested_response_tone("—Ç–µ—Ö–Ω—ñ—á–Ω–∞_–¥–∏—Å–∫—É—Å—ñ—è", "–ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π")
        print(f"   ‚úÖ –¢–æ–Ω –¥–ª—è —Ç–µ—Ö–Ω—ñ—á–Ω–æ—ó –¥–∏—Å–∫—É—Å—ñ—ó: {tone}")
        
        tone2 = get_suggested_response_tone("—Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–∞_—Ä–æ–∑–º–æ–≤–∞", "–∑–∞–¥—É–º–ª–∏–≤–∏–π")
        print(f"   ‚úÖ –¢–æ–Ω –¥–ª—è —Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–æ—ó —Ä–æ–∑–º–æ–≤–∏: {tone2}")
        
        # –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–Ω–∞–ª—ñ–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–Ω–∞–ª—ñ–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
        analysis = analyze_conversation_context(
            "–ì—Ä—è–≥, —â–æ –¥—É–º–∞—î—à –ø—Ä–æ —Ü—ñ –ø–æ–º–∏–ª–∫–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è?", 
            []
        )
        print(f"   ‚úÖ –¢–∏–ø —Ä–æ–∑–º–æ–≤–∏: {analysis['type']}")
        print(f"   ‚úÖ –ù–∞—Å—Ç—Ä—ñ–π: {analysis['mood']}")
        print(f"   ‚úÖ –ó–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å: {analysis['engagement']}/10")
        
        # –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π —Ç–æ–Ω—É
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π —Ç–æ–Ω—É...")
        tone_instruction = get_tone_instruction(analysis)
        print(f"   ‚úÖ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è —Ç–æ–Ω—É: {tone_instruction[:100]}...")
        
        # –¢–µ—Å—Ç 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ...")
        response = await client.generate_content(
            "–ì—Ä—è–≥, —è–∫ —Å–ø—Ä–∞–≤–∏?",
            context_type="normal"
        )
        print(f"   ‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞: {response}")
        
        print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
        print("\nüìù –í–∏—Å–Ω–æ–≤–∫–∏:")
        print("   ‚Ä¢ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–Ω–∏–∂–µ–Ω—ñ –¥–æ –º—ñ–Ω—ñ–º—É–º—É")
        print("   ‚Ä¢ –¢–æ–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π —Å—Ç–∞–ª–∏ –±—ñ–ª—å—à –ø—Ä–∏—Ä–æ–¥–Ω–∏–º–∏")
        print("   ‚Ä¢ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –º–µ–Ω—à '—à–∏–∑–æ—ó–¥–Ω—ñ' —Ç–∞ –±—ñ–ª—å—à –¥—Ä—É–∂–µ–ª—é–±–Ω—ñ")
        print("   ‚Ä¢ –ë–æ—Ç —Ç–µ–ø–µ—Ä –≥–æ–≤–æ—Ä–∏—Ç—å –±—ñ–ª—å—à –∞–¥–µ–∫–≤–∞—Ç–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        return False
    finally:
        try:
            await client.close()
        except:
            pass

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    success = await test_personality_fixes()
    sys.exit(0 if success else 1)

if __name__ == "__main__":
    asyncio.run(main())
